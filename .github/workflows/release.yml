name: Release

on:
  push:
    branches:
      - main
    paths:
      - "Cargo.toml"

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          # - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install zig and cargo-zigbuild
        run: nix profile install --accept-flake-config nixpkgs#zig nixpkgs#cargo-zigbuild

      - name: Build binary
        run: cargo zigbuild --release --target ${{ matrix.target }}

      - name: Rename binary for upload
        run: |
          ext=""
          if [[ "${{ matrix.target }}" == *windows* ]]; then ext=".exe"; fi
          mkdir -p dist
          cp target/${{ matrix.target }}/release/tax-matrix$ext dist/tax-matrix-${{ matrix.target }}$ext

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target }}
          path: dist/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          path: dist
          merge-multiple: true

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | sed -E 's/version = "(.*)"/\1/')
          echo "::set-output name=version::$VERSION"

      - name: Generate changelog
        id: changelog
        run: |
          VERSION=${{ steps.extract_version.outputs.version }}
          PREV_TAG=$(git tag --sort=-creatordate | head -n 1)
          if [ -z "$PREV_TAG" ]; then
            echo "No previous tag found, using all history."
            git log --oneline > changelog.txt
          else
            git log --oneline $PREV_TAG..HEAD > changelog.txt
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          name: Release v${{ steps.extract_version.outputs.version }}
          files: dist/*
          body_path: changelog.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}